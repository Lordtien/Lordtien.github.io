{"ast":null,"code":"import _classCallCheck from\"/home/lordtien/Pesto/snake/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lordtien/Pesto/snake/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/lordtien/Pesto/snake/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/lordtien/Pesto/snake/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/lordtien/Pesto/snake/node_modules/@babel/runtime/helpers/esm/inherits\";import _toConsumableArray from\"/home/lordtien/Pesto/snake/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import ReactDOM from'react-dom';import'./index.css';var TICK_RATE=100;var GRID_SIZE=35;var GRID=[];for(var i=0;i<=GRID_SIZE;i++){GRID.push(i);}var DIRECTIONS={UP:'UP',BOTTOM:'BOTTOM',RIGHT:'RIGHT',LEFT:'LEFT'};var DIRECTION_TICKS={UP:function UP(x,y){return{x:x,y:y-1};},BOTTOM:function BOTTOM(x,y){return{x:x,y:y+1};},RIGHT:function RIGHT(x,y){return{x:x+1,y:y};},LEFT:function LEFT(x,y){return{x:x-1,y:y};}};var KEY_CODES_MAPPER={38:'UP',39:'RIGHT',37:'LEFT',40:'BOTTOM'};var getRandomNumberFromRange=function getRandomNumberFromRange(min,max){return Math.floor(Math.random()*(max-min+1)+min);};var getRandomCoordinate=function getRandomCoordinate(){return{x:getRandomNumberFromRange(1,GRID_SIZE-1),y:getRandomNumberFromRange(1,GRID_SIZE-1)};};var isBorder=function isBorder(x,y){return x===0||y===0||x===GRID_SIZE||y===GRID_SIZE;};var isPosition=function isPosition(x,y,diffX,diffY){return x===diffX&&y===diffY;};var isSnake=function isSnake(x,y,snakeCoordinates){return snakeCoordinates.filter(function(coordinate){return isPosition(coordinate.x,coordinate.y,x,y);}).length;};var getSnakeHead=function getSnakeHead(snake){return snake.coordinates[0];};var getSnakeWithoutStub=function getSnakeWithoutStub(snake){return snake.coordinates.slice(0,snake.coordinates.length-1);};var getSnakeTail=function getSnakeTail(snake){return snake.coordinates.slice(1);};var getIsSnakeOutside=function getIsSnakeOutside(snake){return getSnakeHead(snake).x>=GRID_SIZE||getSnakeHead(snake).y>=GRID_SIZE||getSnakeHead(snake).x<=0||getSnakeHead(snake).y<=0;};var getIsSnakeClumy=function getIsSnakeClumy(snake){return isSnake(getSnakeHead(snake).x,getSnakeHead(snake).y,getSnakeTail(snake));};var getIsSnakeEating=function getIsSnakeEating(_ref){var snake=_ref.snake,snack=_ref.snack;return isPosition(getSnakeHead(snake).x,getSnakeHead(snake).y,snack.coordinate.x,snack.coordinate.y);};var cs=function cs(classA,classGroup){for(var className in classGroup){if(classGroup[className]){classA+=' '+className;};};return classA;};var getCellCs=function getCellCs(isGameOver,snake,snack,x,y){return cs('grid-cell',{'grid-cell-border':isBorder(x,y),'grid-cell-snake':isSnake(x,y,snake.coordinates),'grid-cell-snack':isPosition(x,y,snack.coordinate.x,snack.coordinate.y),'grid-cell-hit':isGameOver&&isPosition(x,y,getSnakeHead(snake).x,getSnakeHead(snake).y)});};var applySnakePosition=function applySnakePosition(prevState){var isSnakeEating=getIsSnakeEating(prevState);var snakeHead=DIRECTION_TICKS[prevState.playground.direction](getSnakeHead(prevState.snake).x,getSnakeHead(prevState.snake).y);var snakeTail=isSnakeEating?prevState.snake.coordinates:getSnakeWithoutStub(prevState.snake);var snackCoordinate=isSnakeEating?getRandomCoordinate():prevState.snack.coordinate;return{snake:{coordinates:[snakeHead].concat(_toConsumableArray(snakeTail))},snack:{coordinate:snackCoordinate}};};var applyGameOver=function applyGameOver(prevState){return{playground:{isGameOver:true}};};var doChangeDirection=function doChangeDirection(direction){return function(){return{playground:{direction:direction}};};};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.onChangeDirection=function(event){if(KEY_CODES_MAPPER[event.keyCode]){_this.setState(doChangeDirection(KEY_CODES_MAPPER[event.keyCode]));}};_this.onTick=function(){getIsSnakeOutside(_this.state.snake)||getIsSnakeClumy(_this.state.snake)?_this.setState(applyGameOver):_this.setState(applySnakePosition);};_this.state={playground:{direction:DIRECTIONS.RIGHT,isGameOver:false},snake:{coordinates:[{x:15,y:15}]},snack:{coordinate:getRandomCoordinate()}};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.interval=setInterval(this.onTick,TICK_RATE);window.addEventListener('keyup',this.onChangeDirection,false);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interval);window.removeEventListener('keyup',this.onChangeDirection,false);}},{key:\"render\",value:function render(){var _this$state=this.state,snake=_this$state.snake,snack=_this$state.snack,playground=_this$state.playground;return React.createElement(\"div\",{className:\"app\"},React.createElement(\"h1\",null,\"Snake!\"),React.createElement(Grid,{snake:snake,snack:snack,isGameOver:playground.isGameOver}));}}]);return App;}(React.Component);var Grid=function Grid(_ref2){var isGameOver=_ref2.isGameOver,snake=_ref2.snake,snack=_ref2.snack;return React.createElement(\"div\",null,GRID.map(function(y){return React.createElement(Row,{y:y,key:y,snake:snake,snack:snack,isGameOver:isGameOver});}));};var Row=function Row(_ref3){var isGameOver=_ref3.isGameOver,snake=_ref3.snake,snack=_ref3.snack,y=_ref3.y;return React.createElement(\"div\",{className:\"grid-row\"},GRID.map(function(x){return React.createElement(Cell,{x:x,y:y,key:x,snake:snake,snack:snack,isGameOver:isGameOver});}));};var Cell=function Cell(_ref4){var isGameOver=_ref4.isGameOver,snake=_ref4.snake,snack=_ref4.snack,x=_ref4.x,y=_ref4.y;return React.createElement(\"div\",{className:getCellCs(isGameOver,snake,snack,x,y)});};// ========================================\nReactDOM.render(React.createElement(App,null),document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/lordtien/Pesto/snake/src/index.js"],"names":["React","ReactDOM","TICK_RATE","GRID_SIZE","GRID","i","push","DIRECTIONS","UP","BOTTOM","RIGHT","LEFT","DIRECTION_TICKS","x","y","KEY_CODES_MAPPER","getRandomNumberFromRange","min","max","Math","floor","random","getRandomCoordinate","isBorder","isPosition","diffX","diffY","isSnake","snakeCoordinates","filter","coordinate","length","getSnakeHead","snake","coordinates","getSnakeWithoutStub","slice","getSnakeTail","getIsSnakeOutside","getIsSnakeClumy","getIsSnakeEating","snack","cs","classA","classGroup","className","getCellCs","isGameOver","applySnakePosition","prevState","isSnakeEating","snakeHead","playground","direction","snakeTail","snackCoordinate","applyGameOver","doChangeDirection","App","props","onChangeDirection","event","keyCode","setState","onTick","state","interval","setInterval","window","addEventListener","clearInterval","removeEventListener","Component","Grid","map","Row","Cell","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nconst TICK_RATE = 100;\nconst GRID_SIZE = 35;\nconst GRID = [];\n\nfor (let i = 0; i <= GRID_SIZE; i++) {\n  GRID.push(i);\n}\n\nconst DIRECTIONS = {\n  UP: 'UP',\n  BOTTOM: 'BOTTOM',\n  RIGHT: 'RIGHT',\n  LEFT: 'LEFT',\n};\n\nconst DIRECTION_TICKS = {\n  UP: (x, y) => ({ x, y: y - 1 }),\n  BOTTOM: (x, y) => ({ x, y: y + 1 }),\n  RIGHT: (x, y) => ({ x: x + 1, y }),\n  LEFT: (x, y) => ({ x: x - 1, y }),\n};\n\nconst KEY_CODES_MAPPER = {\n  38: 'UP',\n  39: 'RIGHT',\n  37: 'LEFT',\n  40: 'BOTTOM',\n};\n\nconst getRandomNumberFromRange = (min, max) =>\n  Math.floor(Math.random() * (max - min +1 ) + min);\n\nconst getRandomCoordinate = () =>\n  ({\n    x: getRandomNumberFromRange(1, GRID_SIZE - 1),\n    y: getRandomNumberFromRange(1, GRID_SIZE - 1),\n  });\n\nconst isBorder = (x, y) =>\n  x === 0 || y === 0 || x === GRID_SIZE || y === GRID_SIZE;\n\nconst isPosition = (x, y, diffX, diffY) =>\n  x === diffX && y === diffY;\n\nconst isSnake = (x, y, snakeCoordinates) =>\n  snakeCoordinates.filter(coordinate => isPosition(coordinate.x, coordinate.y, x, y)).length;\n\nconst getSnakeHead = (snake) =>\n  snake.coordinates[0];\n\nconst getSnakeWithoutStub = (snake) =>\n  snake.coordinates.slice(0, snake.coordinates.length - 1);\n\nconst getSnakeTail = (snake) =>\n  snake.coordinates.slice(1);\n\nconst getIsSnakeOutside = (snake) =>\n  getSnakeHead(snake).x >= GRID_SIZE ||\n  getSnakeHead(snake).y >= GRID_SIZE ||\n  getSnakeHead(snake).x <= 0 ||\n  getSnakeHead(snake).y <= 0;\n\nconst getIsSnakeClumy = (snake) =>\n  isSnake(getSnakeHead(snake).x, getSnakeHead(snake).y, getSnakeTail(snake));\n\nconst getIsSnakeEating = ({ snake, snack }) =>\n isPosition(getSnakeHead(snake).x, getSnakeHead(snake).y, snack.coordinate.x, snack.coordinate.y);\n\nconst cs = (classA, classGroup) => {\n for (var className in classGroup) {\n  if (classGroup[className]) {\n    classA += ' ' + className;\n  };\n };\n return classA;\n};\n\nconst getCellCs = (isGameOver, snake, snack, x, y) =>\n  cs(\n    'grid-cell',\n    {\n      'grid-cell-border': isBorder(x, y),\n      'grid-cell-snake': isSnake(x, y, snake.coordinates),\n      'grid-cell-snack': isPosition(x, y, snack.coordinate.x, snack.coordinate.y),\n      'grid-cell-hit': isGameOver && isPosition(x, y, getSnakeHead(snake).x, getSnakeHead(snake).y),\n    }\n  );\n\nconst applySnakePosition = (prevState) => {\n  const isSnakeEating = getIsSnakeEating(prevState);\n\n  const snakeHead = DIRECTION_TICKS[prevState.playground.direction](\n    getSnakeHead(prevState.snake).x,\n    getSnakeHead(prevState.snake).y,\n  );\n\n  const snakeTail = isSnakeEating\n    ? prevState.snake.coordinates\n    : getSnakeWithoutStub(prevState.snake);\n\n  const snackCoordinate = isSnakeEating\n    ? getRandomCoordinate()\n    : prevState.snack.coordinate;\n\n  return {\n    snake: {\n      coordinates: [snakeHead, ...snakeTail],\n    },\n    snack: {\n      coordinate: snackCoordinate,\n    },\n  };\n};\n\nconst applyGameOver = (prevState) => ({\n  playground: {\n    isGameOver: true\n  },\n});\n\nconst doChangeDirection = (direction) => () => ({\n  playground: {\n    direction,\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playground: {\n        direction: DIRECTIONS.RIGHT,\n        isGameOver: false,\n      },\n      snake: {\n        coordinates: [({x: 15, y: 15})],\n      },\n      snack: {\n        coordinate: getRandomCoordinate(),\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.onTick, TICK_RATE);\n\n    window.addEventListener('keyup', this.onChangeDirection, false);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n\n    window.removeEventListener('keyup', this.onChangeDirection, false);\n  }\n\n  onChangeDirection = (event) => {\n    if (KEY_CODES_MAPPER[event.keyCode]) {\n      this.setState(doChangeDirection(KEY_CODES_MAPPER[event.keyCode]));\n    }\n  }\n\n  onTick = () => {\n    getIsSnakeOutside(this.state.snake) || getIsSnakeClumy(this.state.snake)\n      ? this.setState(applyGameOver)\n      : this.setState(applySnakePosition);\n  }\n\n  render() {\n    const {\n      snake,\n      snack,\n      playground,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Snake!</h1>\n        <Grid\n          snake={snake}\n          snack={snack}\n          isGameOver={playground.isGameOver}\n        />\n      </div>\n    );\n  }\n}\n\nconst Grid = ({ isGameOver, snake, snack }) =>\n  <div>\n    {GRID.map(y =>\n      <Row\n        y={y}\n        key={y}\n        snake={snake}\n        snack={snack}\n        isGameOver={isGameOver}\n      />\n    )}\n  </div>\n\nconst Row = ({ isGameOver, snake, snack, y }) =>\n  <div className=\"grid-row\">\n    {GRID.map(x =>\n      <Cell\n        x={x}\n        y={y}\n        key={x}\n        snake={snake}\n        snack={snack}\n        isGameOver={isGameOver}\n      />\n    )}\n  </div>\n\nconst Cell = ({ isGameOver, snake, snack, x, y }) =>\n  <div className={getCellCs(isGameOver, snake, snack, x, y)} />\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}